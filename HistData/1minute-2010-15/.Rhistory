Cor_FXV_EQR_DF[equityIndex, fx]  <- correl_fxv_eqr$estimate[1]
}
fillFXV_EQV_Correlation <- function(fxEquityReturnsVolatility, equityIndex, fx) {
fxVolatility <- c(do.call("cbind", as.list(fxEquityReturnsVolatility$FX_Standard_Deviation)))
eqVolatility <- c(do.call("cbind", as.list(fxEquityReturnsVolatility$Equity_Standard_Deviation)))
correl_fxv_eqv <- cor.test(fxVolatility, eqVolatility)
Cor_FXV_EQV_DF[equityIndex, fx]  <- correl_fxv_eqv$estimate[1]
}
fillFXR_EQR_Correlation <- function(fxEquityReturnsVolatility, equityIndex, fx) {
fxReturns <- c(do.call("cbind", as.list(fxEquityReturnsVolatility$FX_Returns)))
eqReturns <- c(do.call("cbind", as.list(fxEquityReturnsVolatility$Equity_Returns)))
correl_fxr_eqr <- cor.test(fxReturns, eqReturns)
Cor_FXR_EQR_DF[equityIndex, fx]  <- correl_fxr_eqr$estimate[1]
}
fillFXR_EQV_Correlation <- function(fxEquityReturnsVolatility, equityIndex, fx) {
fxReturns <- c(do.call("cbind", as.list(fxEquityReturnsVolatility$FX_Returns)))
eqVolatility <- c(do.call("cbind", as.list(fxEquityReturnsVolatility$Equity_Standard_Deviation)))
correl_fxr_eqv <- cor.test(fxReturns, eqVolatility)
Cor_FXR_EQV_DF[equityIndex, fx]  <- correl_fxr_eqv$estimate[1]
}
getCor <- function(equityRV, fxRV, equityIndex, fx) {
# Merge RV data frames by Date
fxEquityReturnsVolatility <<- mergeAndFormatRVs(equityRV, fxRV)
# Correlations of FX Volatility & Equity Returns (SD)
Cor_FXV_EQR_DF <<- fillFXV_EQR_Correlation(fxEquityReturnsVolatility, equityIndex, fx)
# Correlations of FX Volatility & Equity Volatility (SD)
Cor_FXV_EQV_DF <<- fillFXV_EQV_Correlation(fxEquityReturnsVolatility, equityIndex, fx)
# Correlations of FX Returns & Equity Returns
Cor_FXR_EQR_DF <<- fillFXR_EQR_Correlation(fxEquityReturnsVolatility, equityIndex, fx)
# Correlations of FX Returns & Equity Volatility (SD)
Cor_FXR_EQV_DF <<- fillFXR_EQV_Correlation(fxEquityReturnsVolatility, equityIndex, fx)
}
# X axis -> FX Volatility
# Y axis -> EQUITY Returns
Cor_FXV_EQR_DF <- prepareCorrelationTable()
# X axis -> FX Volatility
# Y axis -> EQUITY Volatility
Cor_FXV_EQV_DF <- prepareCorrelationTable()
# X axis -> FX Returns
# Y axis -> EQUITY Returns
Cor_FXR_EQR_DF <- prepareCorrelationTable()
# X axis -> FX Returns
# Y axis -> EQUITY Volatility
Cor_FXR_EQV_DF <- prepareCorrelationTable()
# Compute & fill tables
# GSPC -> FXs
# 'GSPC' : Index 1
getCor(GSPC_RV, EURUSD_RV, 1, 'EURUSD')
getCor(GSPC_RV, USDCHF_RV, 1, 'USDCHF')
getCor(GSPC_RV, USDJPY_RV, 1, 'USDJPY')
getCor(GSPC_RV, USDCAD_RV, 1, 'USDCAD')
getCor(GSPC_RV, AUDUSD_RV, 1, 'AUDUSD')
getCor(GSPC_RV, NZDUSD_RV, 1, 'NZDUSD')
getCor(GSPC_RV, USDSEK_RV, 1, 'USDSEK')
# getCor(GSPC_RV, USDNOK_RV, 1, 'USDNOK')
getCor(GSPC_RV, USDMXN_RV, 1, 'USDMXN')
getCor(GSPC_RV, GBPUSD_RV, 1, 'GBPUSD')
# 'GDAXI' : Index 2
getCor(GDAXI_RV, EURUSD_RV, 2, 'EURUSD')
getCor(GDAXI_RV, USDCHF_RV, 2, 'USDCHF')
getCor(GDAXI_RV, USDJPY_RV, 2, 'USDJPY')
getCor(GDAXI_RV, USDCAD_RV, 2, 'USDCAD')
getCor(GDAXI_RV, AUDUSD_RV, 2, 'AUDUSD')
getCor(GDAXI_RV, NZDUSD_RV, 2, 'NZDUSD')
getCor(GDAXI_RV, USDSEK_RV, 2, 'USDSEK')
# getCor(GDAXI_RV, USDNOK_RV, 2, 'USDNOK')
getCor(GDAXI_RV, USDMXN_RV, 2, 'USDMXN')
getCor(GDAXI_RV, GBPUSD_RV, 2, 'GBPUSD')
# SSMI -> FXs
# 'SSMI' : Index 3
getCor(SSMI_RV, EURUSD_RV, 3, 'EURUSD')
getCor(SSMI_RV, USDCHF_RV, 3, 'USDCHF')
getCor(SSMI_RV, USDJPY_RV, 3, 'USDJPY')
getCor(SSMI_RV, USDCAD_RV, 3, 'USDCAD')
getCor(SSMI_RV, AUDUSD_RV, 3, 'AUDUSD')
getCor(SSMI_RV, NZDUSD_RV, 3, 'NZDUSD')
getCor(SSMI_RV, USDSEK_RV, 3, 'USDSEK')
# getCor(SSMI_RV, USDNOK_RV, 3, 'USDNOK')
getCor(SSMI_RV, USDMXN_RV, 3, 'USDMXN')
getCor(SSMI_RV, GBPUSD_RV, 3, 'GBPUSD')
# N225 -> FXs
# 'N225' : Index 1
getCor(N225_RV, EURUSD_RV, 4, 'EURUSD')
getCor(N225_RV, USDCHF_RV, 4, 'USDCHF')
getCor(N225_RV, USDJPY_RV, 4, 'USDJPY')
getCor(N225_RV, USDCAD_RV, 4, 'USDCAD')
getCor(N225_RV, AUDUSD_RV, 4, 'AUDUSD')
getCor(N225_RV, NZDUSD_RV, 4, 'NZDUSD')
getCor(N225_RV, USDSEK_RV, 4, 'USDSEK')
# getCor(N225_RV, USDNOK_RV, 4, 'USDNOK')
getCor(N225_RV, USDMXN_RV, 4, 'USDMXN')
getCor(N225_RV, GBPUSD_RV, 4, 'GBPUSD')
# GSPTSE -> FXs
# 'GSPTSE' : Index 1
getCor(GSPTSE_RV, EURUSD_RV, 5, 'EURUSD')
getCor(GSPTSE_RV, USDCHF_RV, 5, 'USDCHF')
getCor(GSPTSE_RV, USDJPY_RV, 5, 'USDJPY')
getCor(GSPTSE_RV, USDCAD_RV, 5, 'USDCAD')
getCor(GSPTSE_RV, AUDUSD_RV, 5, 'AUDUSD')
getCor(GSPTSE_RV, NZDUSD_RV, 5, 'NZDUSD')
getCor(GSPTSE_RV, USDSEK_RV, 5, 'USDSEK')
# getCor(GSPTSE_RV, USDNOK_RV, 5, 'USDNOK')
getCor(GSPTSE_RV, USDMXN_RV, 5, 'USDMXN')
getCor(GSPTSE_RV, GBPUSD_RV, 5, 'GBPUSD')
# AORD -> FXs
# 'AORD' : Index 1
getCor(AORD_RV, EURUSD_RV, 6, 'EURUSD')
getCor(AORD_RV, USDCHF_RV, 6, 'USDCHF')
getCor(AORD_RV, USDJPY_RV, 6, 'USDJPY')
getCor(AORD_RV, USDCAD_RV, 6, 'USDCAD')
getCor(AORD_RV, AUDUSD_RV, 6, 'AUDUSD')
getCor(AORD_RV, NZDUSD_RV, 6, 'NZDUSD')
getCor(AORD_RV, USDSEK_RV, 6, 'USDSEK')
# getCor(AORD_RV, USDNOK_RV, 6, 'USDNOK')
getCor(AORD_RV, USDMXN_RV, 6, 'USDMXN')
getCor(AORD_RV, GBPUSD_RV, 6, 'GBPUSD')
# NZ50 -> FXs
# 'NZ50' : Index 1
getCor(NZ50_RV, EURUSD_RV, 7, 'EURUSD')
getCor(NZ50_RV, USDCHF_RV, 7, 'USDCHF')
getCor(NZ50_RV, USDJPY_RV, 7, 'USDJPY')
getCor(NZ50_RV, USDCAD_RV, 7, 'USDCAD')
getCor(NZ50_RV, AUDUSD_RV, 7, 'AUDUSD')
getCor(NZ50_RV, NZDUSD_RV, 7, 'NZDUSD')
getCor(NZ50_RV, USDSEK_RV, 7, 'USDSEK')
# getCor(NZ50_RV, USDNOK_RV, 7, 'USDNOK')
getCor(NZ50_RV, USDMXN_RV, 7, 'USDMXN')
getCor(NZ50_RV, GBPUSD_RV, 7, 'GBPUSD')
# OMX -> FXs
# 'OMX' : Index 1
getCor(OMX_RV, EURUSD_RV, 8, 'EURUSD')
getCor(OMX_RV, USDCHF_RV, 8, 'USDCHF')
getCor(OMX_RV, USDJPY_RV, 8, 'USDJPY')
getCor(OMX_RV, USDCAD_RV, 8, 'USDCAD')
getCor(OMX_RV, AUDUSD_RV, 8, 'AUDUSD')
getCor(OMX_RV, NZDUSD_RV, 8, 'NZDUSD')
getCor(OMX_RV, USDSEK_RV, 8, 'USDSEK')
# getCor(OMX_RV, USDNOK_RV, 8, 'USDNOK')
getCor(OMX_RV, USDMXN_RV, 8, 'USDMXN')
getCor(OMX_RV, GBPUSD_RV, 8, 'GBPUSD')
# FTSE -> FXs
# 'FTSE' : Index 1
getCor(FTSE_RV, EURUSD_RV, 9, 'EURUSD')
getCor(FTSE_RV, USDCHF_RV, 9, 'USDCHF')
getCor(FTSE_RV, USDJPY_RV, 9, 'USDJPY')
getCor(FTSE_RV, USDCAD_RV, 9, 'USDCAD')
getCor(FTSE_RV, AUDUSD_RV, 9, 'AUDUSD')
getCor(FTSE_RV, NZDUSD_RV, 9, 'NZDUSD')
getCor(FTSE_RV, USDSEK_RV, 9, 'USDSEK')
# getCor(FTSE_RV, USDNOK_RV, 9, 'USDNOK')
getCor(FTSE_RV, USDMXN_RV, 9, 'USDMXN')
getCor(FTSE_RV, GBPUSD_RV, 9, 'GBPUSD')
# MXX -> FXs
# 'MXX' : Index 1
getCor(MXX_RV, EURUSD_RV, 10, 'EURUSD')
getCor(MXX_RV, USDCHF_RV, 10, 'USDCHF')
getCor(MXX_RV, USDJPY_RV, 10, 'USDJPY')
getCor(MXX_RV, USDCAD_RV, 10, 'USDCAD')
getCor(MXX_RV, AUDUSD_RV, 10, 'AUDUSD')
getCor(MXX_RV, NZDUSD_RV, 10, 'NZDUSD')
getCor(MXX_RV, USDSEK_RV, 10, 'USDSEK')
# getCor(MXX_RV, USDNOK_RV, 10, 'USDNOK')
getCor(MXX_RV, USDMXN_RV, 10, 'USDMXN')
getCor(MXX_RV, GBPUSD_RV, 10, 'GBPUSD')
print("Correlations computations completed")
print("FXV_EQR Table")
Cor_FXV_EQR_DF
print("FXV_EQV Table")
Cor_FXV_EQV_DF
print("FXR_EQR Table")
Cor_FXR_EQR_DF
print("FXR_EQV Table")
Cor_FXR_EQV_DF
fxEquityReturnsVolatility <<- mergeAndFormatRVs(GSPC_RV, EURUSD_RV)
fxVolatility <- c(do.call("cbind", as.list(fxEquityReturnsVolatility$FX_Standard_Deviation)))
eqReturns <- c(do.call("cbind", as.list(fxEquityReturnsVolatility$Equity_Returns)))
correl_fxv_eqr <- cor.test(fxVolatility, eqReturns)
Cor_FXV_EQR_DF[equityIndex, fx]  <- correl_fxv_eqr$estimate[1]
correl_fxv_eqr
correl_fxv_eqr$estimate
[1]
correl_fxv_eqr$estimate[1]
correl_fxv_eqr$estimate[1]
Cor_FXV_EQR_DF[1, 'EURUSD']
Cor_FXV_EQR_DF
Cor_FXV_EQR_DF
Cor_FXV_EQR_DF
Cor_FXV_EQR_DF <- prepareCorrelationTable()
Cor_FXV_EQR_DF
Cor_FXV_EQR_DF[1, 'EURUSD']
Cor_FXV_EQR_DF[equityIndex, fx]  <- correl_fxv_eqr$estimate[1]
Cor_FXV_EQR_DF[1, 'EURUSD']  <- correl_fxv_eqr$estimate[1]
Cor_FXV_EQR_DF[1, 'EURUSD']
Cor_FXV_EQR_DF
# ===========================
# ===========================
# ===========================
# =======CORRELATIONS========
# ===========================
# ===========================
prepareCorrelationTable <- function() {
# Symbols & Currencies vectors for column and row names
EquitySymbols <- c('GSPC', 'GDAXI', 'SSMI', 'N225', 'GSPTSE', 'AORD', 'NZ50', 'OMX', 'FTSE', 'MXX')
FxCurrencies <- c('Equities', 'EURUSD', 'USDCHF', 'USDJPY', 'USDCAD', 'AUDUSD', 'NZDUSD', 'USDSEK', 'USDNOK', 'GBPUSD', 'USDMXN')
correlationTable <- data.frame(matrix(0, ncol = 11, nrow = 10))
colnames(correlationTable) <- FxCurrencies
correlationTable[,1] <- EquitySymbols
return(correlationTable)
}
fillFXV_EQR_Correlation <- function(fxEquityReturnsVolatility, equityIndex, fx) {
fxVolatility <- c(do.call("cbind", as.list(fxEquityReturnsVolatility$FX_Standard_Deviation)))
eqReturns <- c(do.call("cbind", as.list(fxEquityReturnsVolatility$Equity_Returns)))
correl_fxv_eqr <- cor.test(fxVolatility, eqReturns)
Cor_FXV_EQR_DF[equityIndex, fx]  <- correl_fxv_eqr$estimate[1]
return(Cor_FXV_EQR_DF)
}
fillFXV_EQV_Correlation <- function(fxEquityReturnsVolatility, equityIndex, fx) {
fxVolatility <- c(do.call("cbind", as.list(fxEquityReturnsVolatility$FX_Standard_Deviation)))
eqVolatility <- c(do.call("cbind", as.list(fxEquityReturnsVolatility$Equity_Standard_Deviation)))
correl_fxv_eqv <- cor.test(fxVolatility, eqVolatility)
Cor_FXV_EQV_DF[equityIndex, fx]  <- correl_fxv_eqv$estimate[1]
return(Cor_FXV_EQV_DF)
}
fillFXR_EQR_Correlation <- function(fxEquityReturnsVolatility, equityIndex, fx) {
fxReturns <- c(do.call("cbind", as.list(fxEquityReturnsVolatility$FX_Returns)))
eqReturns <- c(do.call("cbind", as.list(fxEquityReturnsVolatility$Equity_Returns)))
correl_fxr_eqr <- cor.test(fxReturns, eqReturns)
Cor_FXR_EQR_DF[equityIndex, fx]  <- correl_fxr_eqr$estimate[1]
return(Cor_FXR_EQR_DF)
}
fillFXR_EQV_Correlation <- function(fxEquityReturnsVolatility, equityIndex, fx) {
fxReturns <- c(do.call("cbind", as.list(fxEquityReturnsVolatility$FX_Returns)))
eqVolatility <- c(do.call("cbind", as.list(fxEquityReturnsVolatility$Equity_Standard_Deviation)))
correl_fxr_eqv <- cor.test(fxReturns, eqVolatility)
Cor_FXR_EQV_DF[equityIndex, fx]  <- correl_fxr_eqv$estimate[1]
return(Cor_FXR_EQV_DF)
}
getCor <- function(equityRV, fxRV, equityIndex, fx) {
# Merge RV data frames by Date
fxEquityReturnsVolatility <<- mergeAndFormatRVs(equityRV, fxRV)
# Correlations of FX Volatility & Equity Returns (SD)
Cor_FXV_EQR_DF <<- fillFXV_EQR_Correlation(fxEquityReturnsVolatility, equityIndex, fx)
# Correlations of FX Volatility & Equity Volatility (SD)
Cor_FXV_EQV_DF <<- fillFXV_EQV_Correlation(fxEquityReturnsVolatility, equityIndex, fx)
# Correlations of FX Returns & Equity Returns
Cor_FXR_EQR_DF <<- fillFXR_EQR_Correlation(fxEquityReturnsVolatility, equityIndex, fx)
# Correlations of FX Returns & Equity Volatility (SD)
Cor_FXR_EQV_DF <<- fillFXR_EQV_Correlation(fxEquityReturnsVolatility, equityIndex, fx)
}
# X axis -> FX Volatility
# Y axis -> EQUITY Returns
Cor_FXV_EQR_DF <- prepareCorrelationTable()
# X axis -> FX Volatility
# Y axis -> EQUITY Volatility
Cor_FXV_EQV_DF <- prepareCorrelationTable()
# X axis -> FX Returns
# Y axis -> EQUITY Returns
Cor_FXR_EQR_DF <- prepareCorrelationTable()
# X axis -> FX Returns
# Y axis -> EQUITY Volatility
Cor_FXR_EQV_DF <- prepareCorrelationTable()
# Compute & fill tables
# GSPC -> FXs
# 'GSPC' : Index 1
getCor(GSPC_RV, EURUSD_RV, 1, 'EURUSD')
getCor(GSPC_RV, USDCHF_RV, 1, 'USDCHF')
getCor(GSPC_RV, USDJPY_RV, 1, 'USDJPY')
getCor(GSPC_RV, USDCAD_RV, 1, 'USDCAD')
getCor(GSPC_RV, AUDUSD_RV, 1, 'AUDUSD')
getCor(GSPC_RV, NZDUSD_RV, 1, 'NZDUSD')
getCor(GSPC_RV, USDSEK_RV, 1, 'USDSEK')
# getCor(GSPC_RV, USDNOK_RV, 1, 'USDNOK')
getCor(GSPC_RV, USDMXN_RV, 1, 'USDMXN')
getCor(GSPC_RV, GBPUSD_RV, 1, 'GBPUSD')
# 'GDAXI' : Index 2
getCor(GDAXI_RV, EURUSD_RV, 2, 'EURUSD')
getCor(GDAXI_RV, USDCHF_RV, 2, 'USDCHF')
getCor(GDAXI_RV, USDJPY_RV, 2, 'USDJPY')
getCor(GDAXI_RV, USDCAD_RV, 2, 'USDCAD')
getCor(GDAXI_RV, AUDUSD_RV, 2, 'AUDUSD')
getCor(GDAXI_RV, NZDUSD_RV, 2, 'NZDUSD')
getCor(GDAXI_RV, USDSEK_RV, 2, 'USDSEK')
# getCor(GDAXI_RV, USDNOK_RV, 2, 'USDNOK')
getCor(GDAXI_RV, USDMXN_RV, 2, 'USDMXN')
getCor(GDAXI_RV, GBPUSD_RV, 2, 'GBPUSD')
# SSMI -> FXs
# 'SSMI' : Index 3
getCor(SSMI_RV, EURUSD_RV, 3, 'EURUSD')
getCor(SSMI_RV, USDCHF_RV, 3, 'USDCHF')
getCor(SSMI_RV, USDJPY_RV, 3, 'USDJPY')
getCor(SSMI_RV, USDCAD_RV, 3, 'USDCAD')
getCor(SSMI_RV, AUDUSD_RV, 3, 'AUDUSD')
getCor(SSMI_RV, NZDUSD_RV, 3, 'NZDUSD')
getCor(SSMI_RV, USDSEK_RV, 3, 'USDSEK')
# getCor(SSMI_RV, USDNOK_RV, 3, 'USDNOK')
getCor(SSMI_RV, USDMXN_RV, 3, 'USDMXN')
getCor(SSMI_RV, GBPUSD_RV, 3, 'GBPUSD')
# N225 -> FXs
# 'N225' : Index 1
getCor(N225_RV, EURUSD_RV, 4, 'EURUSD')
getCor(N225_RV, USDCHF_RV, 4, 'USDCHF')
getCor(N225_RV, USDJPY_RV, 4, 'USDJPY')
getCor(N225_RV, USDCAD_RV, 4, 'USDCAD')
getCor(N225_RV, AUDUSD_RV, 4, 'AUDUSD')
getCor(N225_RV, NZDUSD_RV, 4, 'NZDUSD')
getCor(N225_RV, USDSEK_RV, 4, 'USDSEK')
# getCor(N225_RV, USDNOK_RV, 4, 'USDNOK')
getCor(N225_RV, USDMXN_RV, 4, 'USDMXN')
getCor(N225_RV, GBPUSD_RV, 4, 'GBPUSD')
# GSPTSE -> FXs
# 'GSPTSE' : Index 1
getCor(GSPTSE_RV, EURUSD_RV, 5, 'EURUSD')
getCor(GSPTSE_RV, USDCHF_RV, 5, 'USDCHF')
getCor(GSPTSE_RV, USDJPY_RV, 5, 'USDJPY')
getCor(GSPTSE_RV, USDCAD_RV, 5, 'USDCAD')
getCor(GSPTSE_RV, AUDUSD_RV, 5, 'AUDUSD')
getCor(GSPTSE_RV, NZDUSD_RV, 5, 'NZDUSD')
getCor(GSPTSE_RV, USDSEK_RV, 5, 'USDSEK')
# getCor(GSPTSE_RV, USDNOK_RV, 5, 'USDNOK')
getCor(GSPTSE_RV, USDMXN_RV, 5, 'USDMXN')
getCor(GSPTSE_RV, GBPUSD_RV, 5, 'GBPUSD')
# AORD -> FXs
# 'AORD' : Index 1
getCor(AORD_RV, EURUSD_RV, 6, 'EURUSD')
getCor(AORD_RV, USDCHF_RV, 6, 'USDCHF')
getCor(AORD_RV, USDJPY_RV, 6, 'USDJPY')
getCor(AORD_RV, USDCAD_RV, 6, 'USDCAD')
getCor(AORD_RV, AUDUSD_RV, 6, 'AUDUSD')
getCor(AORD_RV, NZDUSD_RV, 6, 'NZDUSD')
getCor(AORD_RV, USDSEK_RV, 6, 'USDSEK')
# getCor(AORD_RV, USDNOK_RV, 6, 'USDNOK')
getCor(AORD_RV, USDMXN_RV, 6, 'USDMXN')
getCor(AORD_RV, GBPUSD_RV, 6, 'GBPUSD')
# NZ50 -> FXs
# 'NZ50' : Index 1
getCor(NZ50_RV, EURUSD_RV, 7, 'EURUSD')
getCor(NZ50_RV, USDCHF_RV, 7, 'USDCHF')
getCor(NZ50_RV, USDJPY_RV, 7, 'USDJPY')
getCor(NZ50_RV, USDCAD_RV, 7, 'USDCAD')
getCor(NZ50_RV, AUDUSD_RV, 7, 'AUDUSD')
getCor(NZ50_RV, NZDUSD_RV, 7, 'NZDUSD')
getCor(NZ50_RV, USDSEK_RV, 7, 'USDSEK')
# getCor(NZ50_RV, USDNOK_RV, 7, 'USDNOK')
getCor(NZ50_RV, USDMXN_RV, 7, 'USDMXN')
getCor(NZ50_RV, GBPUSD_RV, 7, 'GBPUSD')
# OMX -> FXs
# 'OMX' : Index 1
getCor(OMX_RV, EURUSD_RV, 8, 'EURUSD')
getCor(OMX_RV, USDCHF_RV, 8, 'USDCHF')
getCor(OMX_RV, USDJPY_RV, 8, 'USDJPY')
getCor(OMX_RV, USDCAD_RV, 8, 'USDCAD')
getCor(OMX_RV, AUDUSD_RV, 8, 'AUDUSD')
getCor(OMX_RV, NZDUSD_RV, 8, 'NZDUSD')
getCor(OMX_RV, USDSEK_RV, 8, 'USDSEK')
# getCor(OMX_RV, USDNOK_RV, 8, 'USDNOK')
getCor(OMX_RV, USDMXN_RV, 8, 'USDMXN')
getCor(OMX_RV, GBPUSD_RV, 8, 'GBPUSD')
# FTSE -> FXs
# 'FTSE' : Index 1
getCor(FTSE_RV, EURUSD_RV, 9, 'EURUSD')
getCor(FTSE_RV, USDCHF_RV, 9, 'USDCHF')
getCor(FTSE_RV, USDJPY_RV, 9, 'USDJPY')
getCor(FTSE_RV, USDCAD_RV, 9, 'USDCAD')
getCor(FTSE_RV, AUDUSD_RV, 9, 'AUDUSD')
getCor(FTSE_RV, NZDUSD_RV, 9, 'NZDUSD')
getCor(FTSE_RV, USDSEK_RV, 9, 'USDSEK')
# getCor(FTSE_RV, USDNOK_RV, 9, 'USDNOK')
getCor(FTSE_RV, USDMXN_RV, 9, 'USDMXN')
getCor(FTSE_RV, GBPUSD_RV, 9, 'GBPUSD')
# MXX -> FXs
# 'MXX' : Index 1
getCor(MXX_RV, EURUSD_RV, 10, 'EURUSD')
getCor(MXX_RV, USDCHF_RV, 10, 'USDCHF')
getCor(MXX_RV, USDJPY_RV, 10, 'USDJPY')
getCor(MXX_RV, USDCAD_RV, 10, 'USDCAD')
getCor(MXX_RV, AUDUSD_RV, 10, 'AUDUSD')
getCor(MXX_RV, NZDUSD_RV, 10, 'NZDUSD')
getCor(MXX_RV, USDSEK_RV, 10, 'USDSEK')
# getCor(MXX_RV, USDNOK_RV, 10, 'USDNOK')
getCor(MXX_RV, USDMXN_RV, 10, 'USDMXN')
getCor(MXX_RV, GBPUSD_RV, 10, 'GBPUSD')
print("Correlations computations completed")
print("FXV_EQR Table")
Cor_FXV_EQR_DF
print("FXV_EQV Table")
Cor_FXV_EQV_DF
print("FXR_EQR Table")
Cor_FXR_EQR_DF
print("FXR_EQV Table")
Cor_FXR_EQV_DF
currencyPair <- 'USDNOK'
currencyPairData <- getCurrencyMergedData(currencyPair)
getwd()
setwd("..")
getwd()
currencyPair <- 'USDNOK'
currencyPairData <- getCurrencyMergedData(currencyPair)
setwd(".")
getwd()
setwd("../1minute-2010-15/")
getwd()
getwd()
setwd("/1minute-2010-15/")
setwd("./1minute-2010-15/")
getwd()
currencyPairData <- getCurrencyMergedData(currencyPair)
head(currencyPairData)
currencyPairData <- formatDateTime(currencyPairData)
print('FX data fetched, merged & formatted')
head(currencyPairData)
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000) %>%
group_by(Date) %>%
summarise(fxReturns = (Close[which(Time == 110000)] - Close[which(Time == 100000)]) / Close[which(Time == 100000)])
colnames(fxReturns) <- c("Date", "FX_Returns")
tail(fxReturns)
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000) %>%
group_by(Date) %>%
summarise(fxReturns = (Close[which(Time == 110000)] - Close[which(Time == 100000)]) / Close[which(Time == 100000)])
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000) %>%
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000)
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000)
tail(fxReturns)
head(fxReturns)
summarise(fxReturns = (Close[which(Time == 110000)] - Close[which(Time == 100000)]) / Close[which(Time == 100000)])
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000) %>%
group_by(Date) %>%
summarise(fxReturns = (Close[which(Time == 110000)] - Close[which(Time == 100000)]) / Close[which(Time == 100000)])
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000) %>%
group_by(Date)
head(fxReturns)
tail(fxReturns)
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000) %>%
group_by(Date) %>%
summarise(fxReturns = (Close[which(Time == 110000)]))
head(fxReturns)
tail(fxReturns)
summarise(fxReturns = (Close[which(Time == 110000)] - Close[which(Time == 100000)])))
summarise(fxReturns = (Close[which(Time == 110000)] - Close[which(Time == 100000)]))
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000) %>%
group_by(Date) %>%
summarise(fxReturns = (Close[which(Time == 110000)] - Close[which(Time == 100000)]))
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000) %>%
group_by(Date) %>%
summarise(fxReturns = (Close[which(Time == 110000)] - Close[which(Time == 110000)]))
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000) %>%
group_by(Date) %>%
summarise(fxReturns = (Close[which(Time == 110000)] - Close[which(Time == 100000)]))
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000) %>%
group_by(Date) %>%
summarise(fxReturns = (Close[which(Time == 110000)] - Close[which(Time == 101000)]))
head(fxReturns)
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000) %>%
group_by(Date) %>%
summarise(fxReturns = (Close[which(Time == 110000)] - Close[which(Time == 100100)]))
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000) %>%
group_by(Date) %>%
summarise(fxReturns = (Close[which(Time == 110000)] - Close[which(Time == 100200)]))
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000) %>%
group_by(Date) %>%
summarise(fxReturns = (Close[which(Time == 110000)] - Close[which(Time == 101000)]))
currencyPairData
head(currencyPairData)
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000)
head(currencyPairData)
head(fxReturns)
tail(fxReturns)
fxReturns
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000)
group_by(Date) %>%
summarise(fxReturns = (Close[which(Time == 110000)] - Close[which(Time == 101000)]))
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000) %>%
group_by(Date) %>%
summarise(fxReturns = (Close[which(Time == 110000)] - Close[which(Time == 101000)]))
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000) %>%
group_by(Date) %>%
summarise(fxReturns = (Close[which(Time == 110000)] - Close[which(Time == 100000)]))
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000) %>%
group_by(Date) %>%
summarise(fxReturns = sum(Close[which(Time == 110000)],-(Close[which(Time == 100000)])))
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000) %>%
group_by(Date) %>%
summarise(fxReturns = sum(Close[which(Time == 110000)],-(Close[which(Time == 100000)])) / Close[which(Time == 100000)])
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000) %>%
group_by(Date) %>%
summarise(fxReturns = sum(Close[which(Time == 110000)],-(Close[which(Time == 100000)])) / Close[which(Time == 100000)])
divide_by(5,2)
fxReturns <- currencyPairData %>%
filter(Time >= 100000 & Time <= 110000) %>%
group_by(Date) %>%
summarise(fxReturns = sum(Close[which(Time == 110000)],-(Close[which(Time == 100000)])))
